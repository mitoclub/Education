rm(list=ls(all=TRUE))
### main parameters
BottleneckSize = 25
NumberOfMtDnaPerOocyte = 500000
NumberOfIterations = 50 # 500
results = data.frame();
for (mut in 0:25)
{
if (mut > 0) {NumberOfMutantAlleles = mut*10000}
if (mut == 0) {NumberOfMutantAlleles = 1}
for (iter in 1:NumberOfIterations)
{
Heteroplasmy = NumberOfMutantAlleles / NumberOfMtDnaPerOocyte
Generation = 1
CurrentNumberOfMutantAlleles = NumberOfMutantAlleles
while (Heteroplasmy > 0 & Heteroplasmy < 1)
{
Genotype = c(rep(1,CurrentNumberOfMutantAlleles),rep(0,NumberOfMtDnaPerOocyte - CurrentNumberOfMutantAlleles))
table(Genotype)
### after bottleneck:
NextGeneration = sample(Genotype,BottleneckSize)
NextOocyte = rep(NextGeneration, NumberOfMtDnaPerOocyte/BottleneckSize); length(NextOocyte) # we just multiply! in reality there is some stochasticity!
CurrentNumberOfMutantAlleles = length(NextOocyte[NextOocyte == 1])
Heteroplasmy = CurrentNumberOfMutantAlleles / NumberOfMtDnaPerOocyte
Generation = Generation + 1
# print(c(Generation,Heteroplasmy))
}
results = rbind(results,c(BottleneckSize,NumberOfMtDnaPerOocyte,NumberOfMutantAlleles,Heteroplasmy,Generation))
}
}
names(results)=c('BottleneckSize','NumberOfMtDnaPerOocyte','InitialNumberOfMutantAlleles','FinalHeteroplasmy','Generations')
write.table(results,"Education.mtDnaBottleneck.txt")
median(results[results$FinalHeteroplasmy == 0,]$Generations)
median(results[results$FinalHeteroplasmy == 1,]$Generations)
hist(results[results$FinalHeteroplasmy == 1,]$Generations, breaks = 50)
hist(results[results$FinalHeteroplasmy == 0,]$Generations, breaks = 50)
View(results)
output = paste('Education.mtDnaBottleneck.',NumberOfIterations,'.txt',sep = '')
output
write.table(results,output)
output = paste('Education.01mtDnaBottleneck.',NumberOfIterations,'.txt',sep = '')
write.table(results,output)
res = read.table('Education.01mtDnaBottleneck.50.txt')
View(res)
Agg = aggregate(res[res$FinalHeteroplasmy == 1,]$Generations, by = list(res$InitialNumberOfMutantAlleles), FUN = mean)
Agg = aggregate(res[res$FinalHeteroplasmy == 1,]$Generations, by = c(res$InitialNumberOfMutantAlleles), FUN = mean)
Agg = aggregate(res[res$FinalHeteroplasmy == 1,]$Generations, by = res$InitialNumberOfMutantAlleles, FUN = mean)
View(res)
Agg = aggregate(res[res$FinalHeteroplasmy == 1,]$Generations, by = res[res$FinalHeteroplasmy == 1,]$InitialNumberOfMutantAlleles, FUN = mean)
Agg = aggregate(res[res$FinalHeteroplasmy == 1,]$Generations, by = list(res[res$FinalHeteroplasmy == 1,]$InitialNumberOfMutantAlleles), FUN = mean)
View(Agg)
names(Agg)=c('InitialHeteroplasmy','Generations')
plot(Agg$InitialHeteroplasmy,Agg$Generations)
cor.test(Agg$InitialHeteroplasmy,Agg$Generations,method='spearman')
rm(list=ls(all=TRUE))
res = read.table('Education.01mtDnaBottleneck.50.txt')
Agg = aggregate(res[res$FinalHeteroplasmy == 1,]$Generations, by = list(res[res$FinalHeteroplasmy == 1,]$InitialNumberOfMutantAlleles), FUN = median)
names(Agg)=c('InitialHeteroplasmy','Generations')
plot(Agg$InitialHeteroplasmy,Agg$Generations)
cor.test(Agg$InitialHeteroplasmy,Agg$Generations,method='spearman')
